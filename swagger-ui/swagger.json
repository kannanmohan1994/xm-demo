{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "xm API Documentation !!",
    "title": "xm",
    "version": "1.0.0"
  },
  "host": "localhost:9000",
  "basePath": "/",
  "paths": {
    "/health": {
      "get": {
        "description": "Checks the health of xm app",
        "tags": [
          "Health"
        ],
        "operationId": "idGetHealth",
        "responses": {
          "200": {
            "$ref": "#/responses/GetHealthResponse"
          }
        }
      }
    },
    "/v1/sample": {
      "get": {
        "description": "Fetch sample data",
        "tags": [
          "Sample"
        ],
        "operationId": "idGetSample",
        "responses": {
          "200": {
            "$ref": "#/responses/GetSampleResponseWrapper"
          },
          "400": {
            "$ref": "#/responses/CustomErrorWrapper"
          }
        }
      },
      "post": {
        "description": "Creates a Sample",
        "tags": [
          "Sample"
        ],
        "operationId": "idCreateSample",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateSampleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateSampleReponseWrapper"
          },
          "400": {
            "$ref": "#/responses/CustomErrorWrapper"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateSampleRequest": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        }
      },
      "x-go-package": "xm/internal/entity/request"
    },
    "CustomError": {
      "description": "CustomError : The error format in api response",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Details"
        }
      },
      "x-go-package": "xm/internal/utils"
    },
    "Health": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "xm/internal/entity/response"
    },
    "Sample": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "xm/internal/entity/models"
    }
  },
  "responses": {
    "CreateSampleReponseWrapper": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Sample"
      }
    },
    "CustomErrorWrapper": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/CustomError"
      }
    },
    "GetHealthResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Health"
      }
    },
    "GetSampleResponseWrapper": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Sample"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}